@model CheckBoxListInAspNetMVC.Models.Student

@{
    ViewBag.Title = "Edit";
}

<h3>Edit | Student</h3>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <div class="col-md-2 input-label">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            </div>

            <div class="col-md-10 input-box">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2 input-label">
                @Html.LabelFor(model => model.Department.Name, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-10 input-box">
                @Html.DropDownList("DepartmentId", null, "Select Department", new { @class = "form-control", id = "DepartmentId" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-2 input-label">
                <label class="control-label">Courses</label>
            </div>
            
            <div class="col-md-10 input-box">
                <div class="form-control" id="checkboxDiv">
                    @{
                        if (Model.DepartmentId != null)
                        {
                            var count = Enumerable.Count(ViewBag.DepartmentCourses);
                            foreach (var course in ViewBag.DepartmentCourses)
                            {
                                <input type="checkbox" name="selectedCourses" value="@course.Id"
                                       @if (Model.Courses.Any(x => x.Id == course.Id))
                                       {
                                           <text> Checked </text>
                                       }/>
                                @course.Name
                                if (--count > 0)
                                {
                                    @:|
                                }
                            }

                        }
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2 input-label">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            </div>

            <div class="col-md-10 input-box">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Save" class="btn btn-default" /> | 
                <span>@Html.ActionLink("Back to List", "Index", null, new {@class = "btn btn-default" })</span>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function() {
            var existingDeptId = $("#DepartmentId").val();
            var existingCheckBoxes = $("#checkboxDiv").html();

            $("#DepartmentId").on("change",
                function () {
                    var departmentId = $("#DepartmentId").val();
                    if (departmentId === existingDeptId) {
                        $("#checkboxDiv").html(existingCheckBoxes);
                    } else {
                        $("#checkboxDiv").empty();
                        $.ajax({
                            url: '/Students/SendCourseById',
                            type: "GET",
                            data: { id: departmentId },
                            dataType: "json",
                            async: true,
                            success: function (data) {
                                var count = data.length;
                                var inputs = "";
                                $.each(data,
                                    function () {
                                        if (--count > 0) {
                                            var pipeline = '|';
                                        } else {
                                            pipeline = '';
                                        }
                                        inputs += '<input type="checkbox" name="selectedCourses" value="' +
                                            this.Id +
                                            '">' +
                                            ' ' +
                                            this.Name +
                                            ' ' + pipeline + ' ';
                                    });

                                $("#checkboxDiv").append(inputs);
                            }
                        });
                    }
                });
        });
    </script>
}
